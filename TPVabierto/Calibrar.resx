<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        q2o8AAAAAElFTkSuQmCC
</value>
  </data>
</root>